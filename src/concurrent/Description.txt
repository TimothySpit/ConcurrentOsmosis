Nebenläufige Programmierung

Unsere Implementierung wird in Java erfolgen. Jede Spalte bekommt, wie vorausgesetzt, einen thread. Als erstes wird nur ein Thread mit dem Anfangsknoten erstellt. Dieser wird, wie alle anderen Knoten dieser Spalte, vom Thread in einer LinkedList gehalten. Ein Knoten ist hierbei eine Datenstruktur, die einen y-Wert (im Falle, dass es mehrere Nullknoten innerhalb einer Spalte gibt dient dieser zur Identifikation), jeweils eine Referenz auf den Vorgänger- und Nachfolgerknoten vier Übergangsraten und einen Wert  hat. In jedem Durchgang arbeitet nun der Thread jeden seiner Knoten ab. Abarbeiten ist dabei so zu verstehen: Am aktuellen Knoten werden zwei Update-Funktionen aufgerufen, die einmal den Flow zum Vorgänger und das andere Mal den Flow zum Nachfolger berechnen und propagieren. Wird der Wert eines Knoten dadurch größer Null, so wird de erstellt und als Rückgabewert der jeweiligen Update-Funktion an den Thread geliefert. Dieser ordnet ihn sogleich in seine Liste an Threads ein, da es sein kann, dass er als Nachfolgeknoten direkt bearbeitet werden muss.